name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Cache Python dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: |
          pytest tests/ --maxfail=1 --disable-warnings -q

      - name: Build Docker image
        run: |
          docker build -t myapp:latest .

  lint:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Install linters
        run: pip install flake8 black
      - name: Run linters
        run: flake8 . && black --check .

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to staging
        run: echo "Deploying to staging server..."

  parallel:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        job: [lint, deploy]
    steps:
      - name: Run ${{ matrix.job }} job
        run: |
          if [ "${{ matrix.job }}" == "lint" ]; then
            pip install flake8 black
            flake8 . && black --check .
          elif [ "${{ matrix.job }}" == "deploy" ]; then
            echo "Deploying to staging server..."
          fi